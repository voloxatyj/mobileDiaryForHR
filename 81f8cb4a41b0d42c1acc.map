{"version":3,"sources":["E:/WhatIdo/test/testprojectbynative/components/header.js","E:/WhatIdo/test/testprojectbynative/components/userItem.js","E:/WhatIdo/test/testprojectbynative/components/addUser.js","E:/WhatIdo/test/testprojectbynative/components/about.js","E:/WhatIdo/test/testprojectbynative/routes/drawer.js","E:/WhatIdo/test/testprojectbynative/App.js","E:/WhatIdo/test/testprojectbynative/web-build/register-service-worker.js","E:/WhatIdo/test/testprojectbynative/assets/fonts/AbrilFatface-Regular.ttf","E:/WhatIdo/test/testprojectbynative/assets/fonts/DancingScript-Regular.ttf"],"names":["Header","View","style","styles","header","Text","title","StyleSheet","create","height","padding","backgroundColor","textAlign","color","fontSize","fontWeight","UserItem","item","pressHandler","TouchableOpacity","onPress","id","AntDesign","name","size","main","company","rest","address","city","street","email","marginTop","borderColor","borderWidth","borderStyle","borderRadius","flexDirection","fontStyle","display","justifyContent","paddingTop","fontFamily","AddTodo","onSubmitHandler","useState","name_surname","setName_Surname","setCompany","setAddress","setEmail","label","TextInput","input","placeholder","onChangeText","val","textContentType","placeholderTextColor","Button","marginBottom","paddingHorizontal","paddingVertical","borderBottomWidth","borderBottomColor","RootDrawerNavigator","createDrawerNavigator","AddUser","screen","About","createAppContainer","getFonts","Font","require","App","users","setUsers","fontsLoaded","setFontsLoaded","prevUsers","filter","useEffect","fetch","then","res","json","TouchableWithoutFeedback","Keyboard","dismiss","container","content","length","Math","random","toString","Alert","alert","text","console","log","list","FlatList","keyExtractor","data","renderItem","AppLoading","startAsync","onFinish","flex","navigator","window","addEventListener","serviceWorker","register","scope","info","catch","error","module","exports"],"mappings":"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","file":"static/js/app.2acdf151.chunk.js","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\n\r\nexport default function Header() {\r\n\treturn (\r\n\t\t<View\tstyle={styles.header}>\r\n\t\t\t<Text style={styles.title}>Users Todos</Text>\r\n\t\t</View>\r\n\t)\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\theader: {\r\n\t\theight: 80,\r\n\t\tpadding: 38,\r\n\t\tbackgroundColor: '#613190'\r\n\t},\r\n\ttitle: {\r\n\t\ttextAlign: 'center',\r\n\t\tcolor: '#fff',\r\n\t\tfontSize: 20,\r\n\t\tfontWeight: 'bold'\r\n\t}\r\n});","import React from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport { AntDesign } from '@expo/vector-icons'\r\n\r\nexport default function UserItem({ item, pressHandler }){\r\n\t\treturn (\r\n\t\t\t\t<TouchableOpacity onPress={() => pressHandler(item.id)}>\r\n\t\t\t\t\t<View style={styles.item}>\r\n\t\t\t\t\t\t<AntDesign name='deleteuser' size={24} color='red'/>\r\n\t\t\t\t\t\t<Text style={styles.main}>Employee: {item.name}</Text>\r\n\t\t\t\t\t\t<Text style={styles.company}>Company: {item.company.name}</Text>\r\n\t\t\t\t\t\t<Text style={styles.rest}>City: {item.address.city}, street: {item.address.street}</Text>\r\n\t\t\t\t\t\t<Text style={styles.rest}>email: {item.email}</Text>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</TouchableOpacity>\r\n\t\t)\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\titem: {\r\n\t\tpadding: 16,\r\n\t\tmarginTop: 16,\r\n\t\tborderColor: '#482569',\r\n\t\tborderWidth: 1,\r\n\t\tborderStyle: 'dashed',\r\n\t\tborderRadius: 16,\r\n\t\tbackgroundColor: '#d1b1ef',\r\n\t\tflexDirection: 'column',\r\n\t},\r\n\trest: {\r\n\t\tfontSize: 10,\r\n\t\tfontStyle: 'italic',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-around',\r\n\t\tpaddingTop: 12,\r\n\t\tfontFamily: 'dancing-regular'\r\n\t},\r\n\tmain: {\r\n\t\ttextAlign: 'center',\r\n\t\tcolor: '#f4f4f4',\r\n\t\tfontSize: 22,\r\n\t\tfontWeight: 'bold',\r\n\t\tfontFamily: 'abril-regular'\r\n\t},\r\n\tcompany: {\r\n\t\ttextAlign: 'center',\r\n\t\tcolor: '#7b4880',\t\t\r\n\t\tfontWeight: 'bold',\r\n\t\tfontFamily: 'abril-regular'\r\n\t}\r\n})","import React, { useState } from 'react';\r\nimport { StyleSheet, View, TextInput, Button, Text } from 'react-native';\r\n\r\nexport default function AddTodo ({ onSubmitHandler }) {\r\n\t[name_surname, setName_Surname] = useState('');\r\n\t[company, setCompany] = useState('');\r\n\t[address, setAddress] = useState('');\r\n\t[email, setEmail] = useState('')\r\n\r\n\tconst handleName_Surname = (val) => {\r\n\t\tsetName_Surname(val);\r\n\t};\r\n\r\n\tconst handleCompany = (val) => {\r\n\t\tsetCompany(val);\r\n\t};\r\n\r\n\tconst handleAddress = (val) => {\r\n\t\tsetAddress(val);\r\n\t};\r\n\r\n\tconst handleEmail = (val) => {\r\n\t\tsetEmail(val);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View>\r\n\t\t\t<Text style={styles.label}>field for name_surname</Text>\r\n\t\t\t<TextInput\r\n\t\t\t\tstyle={styles.input}\r\n\t\t\t\tplaceholder='please, write name and surname'\r\n\t\t\t\tonChangeText={handleName_Surname}\r\n\t\t\t\ttextContentType='name'\r\n\t\t\t\tplaceholderTextColor='#00000087'\r\n\t\t\t/>\r\n\t\t\t<Text style={styles.label}>field for name of Company</Text>\r\n\t\t\t<TextInput\r\n\t\t\t\tstyle={styles.input}\r\n\t\t\t\tplaceholder='please, write name of Company'\r\n\t\t\t\tonChangeText={handleCompany}\r\n\t\t\t\ttextContentType='organizationName'\r\n\t\t\t\tplaceholderTextColor='#00000087'\r\n\t\t\t/>\r\n\t\t\t<Text style={styles.label}>field for address</Text>\r\n\t\t\t<TextInput\r\n\t\t\t\tstyle={styles.input}\r\n\t\t\t\tplaceholder='please, write address'\r\n\t\t\t\tonChangeText={handleAddress}\r\n\t\t\t\ttextContentType='fullStreetAddress'\r\n\t\t\t\tplaceholderTextColor='#00000087'\r\n\t\t\t/>\r\n\t\t\t<Text style={styles.label}>field for email</Text>\r\n\t\t\t<TextInput\r\n\t\t\t\tstyle={styles.input}\r\n\t\t\t\tplaceholder='please, write email'\r\n\t\t\t\tonChangeText={handleEmail}\r\n\t\t\t\ttextContentType='emailAddress'\r\n\t\t\t\tplaceholderTextColor='#00000087'\r\n\t\t\t/>\r\n\t\t\t<Button color='purple' onPress={() => onSubmitHandler(name_surname, company, address, email)} title='add data of employee' />\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tinput: {\r\n\t\tmarginBottom: 10,\r\n\t\tpaddingHorizontal: 8,\r\n\t\tpaddingVertical: 6,\r\n\t\tborderBottomWidth: 1,\r\n\t\tborderBottomColor: '#ddd',\r\n\t},\r\n\tlabel: {\r\n\t\tfontSize: 10,\r\n\t\tfontStyle: 'italic',\r\n\t\tcolor: 'purple'\r\n\t}\r\n});","import React from 'react';\r\nimport { Text, View, StyleSheet } from 'react-native';\r\n\r\nexport default function About () {\r\n\treturn (\r\n\t\t<View style={styles.header}>\r\n\t\t\t<Text style={styles.title}>What can I say about this employees</Text>\r\n\t\t</View>\r\n\t)\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\theader: {\r\n\t\theight: 80,\r\n\t\tpadding: 38,\r\n\t\tbackgroundColor: '#613190'\r\n\t},\r\n\ttitle: {\r\n\t\ttextAlign: 'center',\r\n\t\tcolor: '#fff',\r\n\t\tfontSize: 26,\r\n\t\tfontFamily: 'dancing-regular',\r\n\t\tfontWeight: 'bold'\r\n\t}\r\n});","import { createDrawerNavigator } from 'react-navigation-drawer';\r\nimport { createAppContainer } from 'react-navigation';\r\nimport AddUser from '../components/addUser';\r\nimport About from '../components/about';\r\n\r\nconst RootDrawerNavigator = createDrawerNavigator({\r\n\tAddUser: {\r\n\t\tscreen: AddUser\r\n\t},\r\n\tAbout: {\r\n\t\tscreen: About\r\n\t}\r\n})\r\n\r\nexport default createAppContainer(RootDrawerNavigator);","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, FlatList, Alert, TouchableWithoutFeedback, Keyboard } from 'react-native';\nimport Header from './components/header';\nimport UserItem from './components/userItem';\nimport AddUser from './components/addUser';\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\nimport Navigator from './routes/drawer';\n\nconst getFonts = () => {\n  Font.loadAsync({\n    'abril-regular': require('./assets/fonts/AbrilFatface-Regular.ttf'),\n    'dancing-regular': require('./assets/fonts/DancingScript-Regular.ttf')\n  })\n}\n\nexport default function App() {\n  const [users, setUsers] = useState();\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n  \n  const pressHandler = (id) => {\n    setUsers((prevUsers)=>{\n      return prevUsers.filter(users => users.id != id)\n    })\n  }\n\n  /* request API to json.placeholder to get users */\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users') \n      .then(res => res.json())\n      .then(res => {\n        setUsers(res);\n      })\n  })\n\n  /* Add data for new User*/\n  const onSubmitHandler = (name_surname, company, address, email) =>{\n    if (name_surname.length>3){\n      setUsers((prevUsers) => {\n        return [\n          {\n            id: Math.random().toString(),\n            name: name_surname,\n            company: {\n              name: company\n            },\n            address: address,\n            email: email\n          },\n          ...prevUsers\n        ]\n      });\n    } else {\n      Alert.alert('OOPS!', 'Emploee name must be longer than three characters!', [\n        {text: 'Understood', onPress: () => console.log('alert closed')}\n      ])\n    }\n  }\n  \n  if (fontsLoaded) {\n  return (\n    <TouchableWithoutFeedback onPress={()=>Keyboard.dismiss()}>\n      <View style={styles.container}>\n        <Navigator />\n          <Header />\n          <View style={styles.content}>\n            <AddUser onSubmitHandler={onSubmitHandler}/>\n            <View style={styles.list}>\n              <FlatList\n                keyExtractor={item => item.id.toString()}   \n                data={users}\n                renderItem={({item}) => (\n                  <UserItem item={item} pressHandler={pressHandler}/>\n                )}\n              />\n            </View>\n          </View>\n      </View>\n    </TouchableWithoutFeedback>  \n    );\n  } else {\n    return(\n      <AppLoading\n        startAsync={getFonts}\n        onFinish={() => setFontsLoaded(true)}\n      />\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  content: {\n    padding: 40,\n  },\n  list: {\n    marginTop: 20,\n  }\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/mobileDiaryForHR/expo-service-worker.js', { scope: '/mobileDiaryForHR/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/AbrilFatface-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/DancingScript-Regular.ttf\";"],"sourceRoot":""}